<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jfeat.module.smallsaas.ticket.services.domain.dao.QueryComplainRecordDao">
    <sql id="Base_Column_List">
        nft_complain_record
        .
        id
        , nft_complain_record.complainant_id AS complainantId, nft_complain_record.relation_order_id AS relationOrderId, nft_complain_record.complainant_role AS complainant_role,
        nft_complain_record.title, nft_complain_record.content, nft_complain_record.credential_link AS credentialLink, nft_complain_record.status,nft_complain_record.create_time AS createTime ,nft_complain_record.update_time AS updateTime,
        request_type AS requestType
    </sql>


    <resultMap id="ComplainRecordMap" type="ComplainRecordRecord">
        <id property="id" column="id"/>
        <association property="replyRecordList" column="id"
                     select="com.jfeat.module.smallsaas.ticket.services.gen.persistence.dao.ComplainReplyRecordMapper.queryByComplainId"/>
    </resultMap>


    <select id="queryMasterModel" resultMap="ComplainRecordMap">
        SELECT nft_complain_record.*
        FROM nft_complain_record
        WHERE nft_complain_record.id = #{id}
        GROUP BY nft_complain_record.id
    </select>


    <select id="findComplainRecordPage" resultMap="ComplainRecordMap" parameterType="ComplainRecordRecord">
        SELECT
        <include refid="Base_Column_List"/>


        FROM nft_complain_record


        WHERE 1=1


        <if test="record.id != null and record.id>0 ">
            AND nft_complain_record.id LIKE CONCAT('%',#{record.id},'%')
        </if>


        <if test="record.complainantId != null and record.complainantId>0 ">
            AND nft_complain_record.complainant_id LIKE CONCAT('%',#{record.complainantId},'%')
        </if>


        <if test="record.relationOrderId != null and record.relationOrderId>0 ">
            AND nft_complain_record.relation_order_id LIKE CONCAT('%',#{record.relationOrderId},'%')
        </if>
        <if test="record.title != null and record.title!= ''">
            AND nft_complain_record.title LIKE CONCAT('%',#{record.title},'%')
        </if>
        <if test="record.content != null and record.content!= ''">
            AND nft_complain_record.content LIKE CONCAT('%',#{record.content},'%')
        </if>


        <if test="record.credentialLink != null and record.credentialLink!= ''">
            AND nft_complain_record.credential_link LIKE CONCAT('%',#{record.credentialLink},'%')
        </if>
        <if test="record.status != null and record.status!= ''">
            AND nft_complain_record.status LIKE CONCAT('%',#{record.status},'%')
        </if>

        <if test="startTime != null">
            <![CDATA[AND nft_complain_record.start_time >= DATE(#{startTime})]]>
        </if>
        <if test="endTime != null">
            <![CDATA[AND nft_complain_record.end_time <= DATE(#{endTime}]]>
        </if>
        <!--
    <if test="search != null and search != ''">
        OR nft_complain_record.name LIKE CONCAT('%',#{search},'%')
    </if>
    -->
    </select>

<!--    <select id="queryComplainRecordPage" resultMap="complainInformation">-->
<!--        select nft_complain_record.*,nft_player.*-->
<!--        from nft_complain_record-->
<!--        left join nft_player on nft_complain_record.complainant_id = nft_player.id-->
<!--        Where request_type = #{requestType} ORDER BY nft_complain_record.create_time DESC-->
<!--    </select>-->

<!--    <resultMap id="complainInformation" type="ComplainRecordModel">-->
<!--        <id column="id" property="id" />-->
<!--        <result column="complainant_id" property="complainantId" />-->
<!--        <result column="relationOrder_id" property="relationOrderId" />-->
<!--        <result column="complainant_role" property="complainantRole" />-->
<!--        <result column="title" property="title" />-->
<!--        <result column="content" property="content" />-->
<!--        <result column="credential_link" property="credentialLink" />-->
<!--        <result column="status" property="status" />-->
<!--        <result column="create_time" property="createTime" />-->
<!--        <result column="update_time" property="updateTime" />-->
<!--        <result column="request_type" property="requestType" />-->
<!--        <collection property="items" ofType="Player">-->

<!--            <result column="name" property="name" />-->
<!--            <result column="mobile_phone" property="mobilePhone" />-->
<!--            <result column="user_id" property="userId" />-->

<!--        </collection>-->
<!--    </resultMap>-->

</mapper>